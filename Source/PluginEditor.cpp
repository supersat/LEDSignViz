/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic startup code for a Juce application.

  ==============================================================================
*/

#include "PluginProcessor.h"
#include "PluginEditor.h"


//==============================================================================
LedsignVizAudioProcessorEditor::LedsignVizAudioProcessorEditor (LedsignVizAudioProcessor* ownerFilter)
    : AudioProcessorEditor (ownerFilter), scale(2)
{
    // This is where our plugin's editor size is set.
    setSize (400, 32);
	startTimer(10);
}

LedsignVizAudioProcessorEditor::~LedsignVizAudioProcessorEditor()
{
}

//==============================================================================
void LedsignVizAudioProcessorEditor::paint (Graphics& g)
{
    g.fillAll (Colours::black);
	
	unsigned char localBitmap[MAX_SIGN_HEIGHT][MAX_SIGN_WIDTH];
	LedsignVizAudioProcessor* processor = (LedsignVizAudioProcessor*) getAudioProcessor();
	processor->bitmapLock.enter();
	memcpy(localBitmap, processor->bitmap, sizeof(localBitmap));
	processor->bitmapLock.exit();

	for (int y = 0; y < processor->signHeight; y++) {
		for (int x = 0; x < processor->signWidth; x++) {
			if (localBitmap[y][x]) {
				unsigned char red = localBitmap[y][x] & 0xf0;
				unsigned char green = (localBitmap[y][x] & 0xf) << 4;
				g.setColour(Colour(red, green, 0));
				for (int yo = 0; yo < scale; yo++) {
					for (int xo = 0; xo < scale; xo++) {
						g.setPixel(x * scale + xo, y * scale + yo);
					}
				}
			}
		}
	}
}

void LedsignVizAudioProcessorEditor::timerCallback() {
	repaint();
}
